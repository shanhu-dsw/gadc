wb = xlsx_package.workbook
s = wb.styles
title_cell = s.add_style sz: 14, alignment: { horizontal: :center }


@startTime = Time.parse(params[:query_from_date]).strftime('%Y年%m月%d日')
@endTime = Time.parse(params[:query_to_date]).strftime('%m月%d日')

wb.add_worksheet(name: "cameras") do |sheet|

  header = ['地区', '问题总数', '待审核', '整改中', '已整改', '上级审核', '推送上级复核不当', '现确认问题数', '突出问题类型']

  categories_k = []
  categories_v = [
    '合计',
    (@resources.size rescue 0),
    (@resources.query_problem_status('waiting').size rescue 0),
    (@resources.query_problem_status('correcting').size rescue 0),
    (@resources.query_problem_status('corrected').size rescue 0),
    (@resources.query_problem_status('reviewing').size rescue 0),
    (@resources.query_problem_status('negated').size rescue 0),
    (@resources.query_problem_status_arr('corrected,correcting').size rescue 0),
    '',
    ]
  @category && @category.each do |k,v|
    categories_k.push(k)
    categories_v.push(v)
    header.push(k)
  end

  categories_v.push((@resources.query_problem_status_arr('corrected,correcting').size rescue 0))

  header.push('汇总')

  sheet.merge_cells('A1:L1')
  sheet.merge_cells('A' + (@location_pro.size + 4).to_s + ':L' + (@location_pro.size + 6).to_s)
  sheet.merge_cells('A' + (@location_pro.size + 7).to_s + ':L' + (@location_pro.size + 7).to_s)
  sheet.add_row [@startTime.to_s + '至' + @endTime.to_s + '督察数据统计表'], style: [title_cell]

  sheet.add_row header

    @location_pro.each do |k,v|

        @location_category = v.query_problem_status_arr('corrected,correcting').group_by { |j| j.problem_category.name rescue '未知问题类型' }.map { |k, v| [k, v.size] }.sort_by { |v| -v[1] }.first(1)

        info = [
                           (Location.find(k).name rescue nil),
                           (v.size rescue 0),
                           (v.query_problem_status('waiting').size rescue 0),
                           (v.query_problem_status('correcting').size rescue 0),
                           (v.query_problem_status('corrected').size rescue 0),
                           (v.query_problem_status('reviewing').size rescue 0),
                           (v.query_problem_status('negated').size rescue 0),
                           (v.query_problem_status_arr('corrected,correcting').size rescue 0),
                           ((@location_category[0][0].to_s + @location_category[0][1].to_s + '个') rescue '无突出问题'),
                         ]

        categories_k.each do |name|
            category_id = ProblemCategory.query_name(name)[0].id
            info.push(v.query_problem_status_arr('corrected,correcting').query_problem_category_id(category_id).size)
        end

        info.push((v.query_problem_status_arr('corrected,correcting').size rescue 0))

        sheet.add_row info
    end

  sheet.add_row categories_v

  sheet.add_row ['']
  sheet.add_row ['']
  sheet.add_row ['']
  sheet.add_row ['周重点'], style: [title_cell]
      index = 8
      @location_pro.each do |k,v|
          @division_pro = {}
          Location.find(k).children.each do |location|
            @division_pro[location.id] = @resources.where(location_id: location.id)
          end

          sheet.merge_cells('A' + (@location_pro.size + index).to_s + ':Z' + (@location_pro.size + index).to_s)
          index = index + 1


          @division_pro2 = {}
          Location.find(k).children.each do |location|
            if location.location_level_id == 5
                @division_pro2[location.id] = @resources.query_problem_status_arr('corrected,correcting').where(id: location.id)
            else
                @division_pro2[location.id] = @resources.query_problem_status_arr('corrected,correcting').where(location_id: location.subtree_ids)
            end
          end


          info2 = ''
          @division_pro2.each do |k,v|
             if v.size != 0
                division_category = v.where(problem_status: 'correcting'..'corrected').group_by { |j| j.problem_category.name rescue '未知问题类型' }.map { |k, v| [k, v.size] }.sort_by { |v| -v[1] }
                info3 = ''
                index3 = 1
                tage = '，'
                division_category.each do |k,v2|
                   division_category.size == index3 && (tage = '。')
                   info3 = info3 + k + v2.to_s + '个' + tage
                   index3 = index3 + 1
                end

                info2 = info2 + (Location.find(k).name rescue nil) + v.size.to_s + '：' + info3
             end
          end



          info = (Location.find(k).name rescue nil).to_s + '：'\
                 + '' + (v.query_problem_status_arr('corrected,correcting').size rescue 0).to_s + '个。 '\
                 + info2

          sheet.add_row [info]
      end

end
